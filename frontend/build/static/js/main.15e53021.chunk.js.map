{"version":3,"sources":["logo.svg","Components/NavBar.js","Components/OxygenLead.js","Components/OxygenList.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","useState","searchBy","setsearchBy","searchParam","setSearchParam","collapseNavBar","setCollapseNavBar","Navbar","bg","variant","expand","fixed","Brand","href","src","logo","width","height","className","alt","Toggle","aria-controls","onClick","e","Collapse","id","in","Nav","Link","NavDropdown","title","Item","Divider","Form","inline","onSubmit","preventDefault","console","log","search","searchLeads","Control","as","onChange","target","value","FormControl","type","placeholder","required","OxygenLead","state","verified","timenow","Date","getLastArr","JSON","parse","localStorage","getItem","this","setState","axios","post","then","catch","verify","setItem","stringify","toString","last_verified","getTime","clearInterval","setInterval","includes","telList","phNo","map","p","Jumbotron","name","Container","Row","Col","locality","city","pin","Math","ceil","verified_by","Button","verifyLead","disabled","style","float","Component","OxygenList","oxygenLeads","searchResults","open","getOxygenLeads","get","data","setTimeout","verifiedByUser","leads","index","forEach","v","i","lead","prevProps","a4","filter","l","array_of_o2","phone_number","pincode","added_by","reports","marginTop","App","setSearchBy","param","by","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAAe,MAA0B,iC,OCU1B,SAASA,EAAOC,GAC7B,MAAgCC,mBAAS,WAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA4CJ,oBAAS,GAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KASA,OACE,eAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,KAAKC,MAAM,MAAnD,UACE,eAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,QAAnB,UACE,qBACEC,IAAKC,EACLC,MAAM,KACNC,OAAO,KACPC,UAAU,2BACVC,IAAI,SANR,qBAUA,cAACZ,EAAA,EAAOa,OAAR,CACEC,gBAAc,mBACdC,QAAS,SAACC,GAAD,OAAOjB,GAAmBD,MAErC,eAACE,EAAA,EAAOiB,SAAR,CAAiBC,GAAG,mBAAmBC,GAAIrB,EAA3C,UACE,eAACsB,EAAA,EAAD,CAAKT,UAAU,UAAf,UACE,cAACS,EAAA,EAAIC,KAAL,CAAUf,KAAK,QAAf,kBACA,cAACc,EAAA,EAAIC,KAAL,CAAUf,KAAK,QAAf,kBACA,eAACgB,EAAA,EAAD,CAAaC,MAAM,WAAWL,GAAG,qBAAjC,UACE,cAACI,EAAA,EAAYE,KAAb,CAAkBlB,KAAK,cAAvB,oBACA,cAACgB,EAAA,EAAYE,KAAb,CAAkBlB,KAAK,cAAvB,4BAGA,cAACgB,EAAA,EAAYE,KAAb,CAAkBlB,KAAK,cAAvB,uBACA,cAACgB,EAAA,EAAYG,QAAb,IACA,cAACH,EAAA,EAAYE,KAAb,CAAkBlB,KAAK,cAAvB,kCAKJ,eAACoB,EAAA,EAAD,CAAMC,QAAM,EAACC,SAAU,SAACZ,GAAD,OAvCT,SAACA,GACnBA,EAAEa,iBACFC,QAAQC,IAAI,wBACZD,QAAQC,IAAI,eAAgBrC,EAAU,cAAeE,GACrDJ,EAAMwC,OAAOpC,EAAaF,GAC1BK,GAAmBD,GAkCemC,CAAYjB,IAA1C,UACE,eAACU,EAAA,EAAKQ,QAAN,CACEC,GAAG,SACHC,SAAU,SAACpB,GAAD,OAAOrB,EAAYqB,EAAEqB,OAAOC,QAFxC,UAIE,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,WAAd,yBAEF,cAACC,EAAA,EAAD,CACEC,KAAK,OACLC,YAAY,SACZ9B,UAAU,UACV+B,UAAU,EACVJ,MAAO1C,EACPwC,SAAU,SAACpB,GACTnB,EAAemB,EAAEqB,OAAOC,UAG5B,cAACC,EAAA,EAAD,CACEC,KAAK,SACLtC,QAAQ,kBACRoC,MAAM,SACN3B,UAAU,qC,qGCzEDgC,E,4MACnBC,MAAQ,CAAEC,UAAU,EAAOC,QAAS,IAAIC,M,gDACxC,SAAW/B,GACT,IAAMgC,EACkD,MAAtDC,KAAKC,MAAMC,aAAaC,QAAQ,mBAC5B,GACAH,KAAKC,MAAMC,aAAaC,QAAQ,mBAEtCC,KAAKC,SAAS,CAAET,UAAU,IAC1BU,IACGC,KAAK,2BAA4B,CAChCtC,GAAImC,KAAK7D,MAAM0B,KAEhBuC,KAAK3B,QAAQC,IAAI,aACjB2B,OAAM,SAAC1C,GAAD,OAAOc,QAAQC,IAAIf,MAE5BqC,KAAK7D,MAAMmE,OAAON,KAAK7D,MAAM0B,IAC7BiC,aAAaS,QACX,iBACAX,KAAKY,UAAL,sBAAmBb,GAAnB,CAA+BK,KAAK7D,MAAM0B,GAAG4C,eAG/CT,KAAKC,SAAS,CAACS,cAAe,IAAIhB,S,qBAGpC,WAEE,OAAO,IAAIA,MAAOiB,Y,kCAGpB,WACEC,kB,+BAIF,WAAqB,IAAD,OAClBZ,KAAKC,SAAS,CAACS,cAAeV,KAAK7D,MAAMuE,gBACzCG,aAAY,WACVpC,QAAQC,IAAI,gBACZ,EAAKuB,SAAS,CAAER,QAAS,EAAKkB,cAC7B,MAEqD,MAAtDf,KAAKC,MAAMC,aAAaC,QAAQ,mBAC5B,GACAH,KAAKC,MAAMC,aAAaC,QAAQ,oBAEvBe,SAASd,KAAK7D,MAAM0B,GAAG4C,aACpCT,KAAKC,SAAS,CAAET,UAAU,M,oBAE9B,SAAOrD,GAAQ,IAAD,OACR4E,EAAUf,KAAK7D,MAAM6E,KAAKC,KAAI,SAACC,GACjC,OACE,4BACE,mBAAGjE,KAAM,OAASiE,EAAlB,SAAsBA,KADhBA,MAOZ,OADAzC,QAAQC,IAAIsB,KAAK7D,MAAMuE,eAErB,eAACS,EAAA,EAAD,WACE,6BAAKnB,KAAK7D,MAAMiF,OAChB,8CAAiBL,KACjB,cAACM,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,2CACY,iCAASvB,KAAK7D,MAAMqF,gBAIlC,cAACD,EAAA,EAAD,UACE,8BACG,IADH,SAEQ,iCAASvB,KAAK7D,MAAMsF,YAG9B,cAACF,EAAA,EAAD,UACE,0CACW,iCAASvB,KAAK7D,MAAMuF,gBAMrC,8CACgB,IACd,mCACGC,KAAKC,MACH5B,KAAKT,MAAME,QACV,IAAIC,KAAKM,KAAKT,MAAMmB,eAAeC,WADrC,KAGC,IALL,iBAUDX,KAAKT,MAAMC,SACV,yCACU,iCAASQ,KAAK7D,MAAM0F,cAD9B,iCAEY,uBAFZ,+BAMA,6CACc,iCAAS7B,KAAK7D,MAAM0F,cADlC,cAKF,cAACR,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACO,EAAA,EAAD,CACEjF,QAAQ,UACRa,QAAS,SAACC,GAAD,OAAO,EAAKoE,WAAWpE,IAChCqE,SAAUhC,KAAKT,MAAMC,SAHvB,sBAQF,eAAC+B,EAAA,EAAD,WACG,IACD,cAACO,EAAA,EAAD,CAAQjF,QAAQ,SAASoF,MAAO,CAAEC,MAAO,SAAzC,mC,GA1H0BC,a,QCCnBC,E,4MACnB7C,MAAQ,CAAE8C,YAAa,GAAIC,cAAe,GAAIC,MAAM,G,EACpDC,eAAiB,WACftC,IACGuC,IAAI,WACJrC,MAAK,SAACsC,GACL,EAAKzC,SAAS,CAAEoC,YAAY,YAAKK,EAAKA,QACtC,EAAKzC,SAAS,CAAEqC,cAAc,YAAKI,EAAKA,WAEzCrC,OAAM,SAAC1C,GACNc,QAAQC,IAAIf,MAGdgF,YAAW,kBAAI,EAAK1C,SAAS,CAACsC,MAAM,MAAO,M,EAS/CK,eAAiB,SAAC/E,GAChB,IAAIgF,EAAK,YAAO,EAAKtD,MAAM8C,aACvBS,EAAQ,EACZD,EAAME,SAAQ,SAACC,EAAGC,GACZD,EAAEnF,KAAOA,IAAIiF,EAAQG,MAE3B,IAAIC,EAAI,eAAQL,EAAMC,IACtBI,EAAKxC,cAAgB,IAAIhB,KACzBwD,EAAKrB,YAAcqB,EAAKrB,YAAc,EACtCgB,EAAMC,GAASI,EACf,EAAKjD,SAAS,CAAEoC,YAAY,YAAKQ,M,uDAhBnC,WACE7C,KAAKwC,iBACL/D,QAAQC,IAAI,a,gCAmBd,SAAmByE,GAEjB,GADA1E,QAAQC,IAAIyE,EAAWnD,KAAK7D,OAE1BgH,EAAUxE,OAAOtC,WAAa2D,KAAK7D,MAAMwC,OAAOtC,UAChD8G,EAAUxE,OAAOpC,cAAgByD,KAAK7D,MAAMwC,OAAOpC,YACnD,CACA,IAAIF,EAAW2D,KAAK7D,MAAMwC,OAAOtC,SAC7BE,EAAcyD,KAAK7D,MAAMwC,OAAOpC,YACpCkC,QAAQC,IAAI,qBAAsBrC,EAAUE,GAE5C,IAAI6G,EAAKpD,KAAKT,MAAM8C,YAAYgB,QAAO,SAACC,GAAD,OAAOA,EAAEjH,KAAcE,KAE9DyD,KAAKC,SAAS,CAAEqC,cAAec,IAC/B3E,QAAQC,IAAI0E,M,oBAIhB,SAAOjH,GAAQ,IAAD,OACRoH,EAAcvD,KAAKT,MAAM+C,cAAcrB,KAAI,SAACqC,GAC9C,OACE,8BACE,cAAC,EAAD,CACElC,KAAMkC,EAAElC,KACRJ,KAAMsC,EAAEE,aACRhC,SAAU8B,EAAE9B,SACZC,KAAM6B,EAAE7B,KACRC,IAAK4B,EAAEG,QACP/C,cAAe4C,EAAE5C,cACjBmB,YAAayB,EAAEzB,YACf6B,SAAUJ,EAAEI,SACZC,QAASL,EAAEK,QAEX9F,GAAIyF,EAAEzF,GACNyC,OAAQ,EAAKsC,gBAFRU,EAAEzF,SAQf,OAAO,cAACD,EAAA,EAAD,CAAUE,GAAIkC,KAAKT,MAAMgD,KAAzB,SAA+B,qBAAKN,MAAO,CAAE2B,UAAW,QAAzB,SAAoCL,U,GA5EtCpB,aCsBzB0B,MApBf,WACE,MAAsCzH,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOC,EAAP,KAAiByH,EAAjB,KAMA,OACE,gCACE,cAAC5H,EAAD,CAAQyC,OANW,SAACoF,EAAMC,GAC5BxH,EAAeuH,GACfD,EAAYE,MAKV,cAAC3C,EAAA,EAAD,UAEI,cAAC,EAAD,CAAY1C,OAAQ,CAACtC,WAAUE,uBCR1B0H,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/D,MAAK,YAAkD,IAA/CgE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.15e53021.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from \"react\";\nimport {\n  Form,\n  FormControl,\n  Nav,\n  Navbar,\n  NavDropdown,\n} from \"react-bootstrap\";\nimport logo from \"../logo.svg\";\n\nexport default function NavBar(props) {\n  const [searchBy, setsearchBy] = useState(\"pincode\");\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [collapseNavBar, setCollapseNavBar] = useState(false);\n\n  const searchLeads = (e) => {\n    e.preventDefault();\n    console.log(\"Searching Leads Here\");\n    console.log(\"Searching by\", searchBy, \"with params\", searchParam);\n    props.search(searchParam, searchBy);\n    setCollapseNavBar(!collapseNavBar);\n  };\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\n      <Navbar.Brand href=\"#home\">\n        <img\n          src={logo}\n          width=\"30\"\n          height=\"30\"\n          className=\"d-inline-block align-top\"\n          alt=\"null\"\n        ></img>\n        COVID Something\n      </Navbar.Brand>\n      <Navbar.Toggle\n        aria-controls=\"basic-navbar-nav\"\n        onClick={(e) => setCollapseNavBar(!collapseNavBar)}\n      />\n      <Navbar.Collapse id=\"basic-navbar-nav\" in={collapseNavBar}>\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"#home\">Home</Nav.Link>\n          <Nav.Link href=\"#link\">Link</Nav.Link>\n          <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.2\">\n              Another action\n            </NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item href=\"#action/3.4\">\n              Separated link\n            </NavDropdown.Item>\n          </NavDropdown>\n        </Nav>\n        <Form inline onSubmit={(e) => searchLeads(e)}>\n          <Form.Control\n            as=\"select\"\n            onChange={(e) => setsearchBy(e.target.value)}\n          >\n            <option value=\"pincode\">Pincode</option>\n            <option value=\"city\">City</option>\n            <option value=\"locality\">Locality</option>\n          </Form.Control>\n          <FormControl\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"mr-sm-2\"\n            required={true}\n            value={searchParam}\n            onChange={(e) => {\n              setSearchParam(e.target.value);\n            }}\n          />\n          <FormControl\n            type=\"submit\"\n            variant=\"outline-success\"\n            value=\"Search\"\n            className=\"btn btn-outline-success\"\n          />\n        </Form>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Button, Col, Container, Jumbotron, Row } from \"react-bootstrap\";\n\nexport default class OxygenLead extends Component {\n  state = { verified: false, timenow: new Date() };\n  verifyLead(e) {\n    const getLastArr =\n      JSON.parse(localStorage.getItem(\"verifiedOxygen\")) == null\n        ? []\n        : JSON.parse(localStorage.getItem(\"verifiedOxygen\"));\n\n    this.setState({ verified: true });\n    axios\n      .post(\"/oxygen/verifyOxygenLead\", {\n        id: this.props.id,\n      })\n      .then(console.log(\"Verified\"))\n      .catch((e) => console.log(e));\n\n    this.props.verify(this.props.id);\n    localStorage.setItem(\n      \"verifiedOxygen\",\n      JSON.stringify([...getLastArr, this.props.id.toString()])\n    );\n\n    this.setState({last_verified: new Date()})\n  }\n\n  getTime() {\n  \n    return new Date().getTime();\n  }\n\n  componentWillUnmount(){\n    clearInterval()\n  }\n\n\n  componentDidMount() {\n    this.setState({last_verified: this.props.last_verified})\n    setInterval(() => {\n      console.log(\"Timer called\");\n      this.setState({ timenow: this.getTime() });\n    }, 60000);\n    const getLastArr =\n      JSON.parse(localStorage.getItem(\"verifiedOxygen\")) == null\n        ? []\n        : JSON.parse(localStorage.getItem(\"verifiedOxygen\"));\n    // console.log(getLastArr);\n    if (getLastArr.includes(this.props.id.toString()))\n      this.setState({ verified: true });\n  }\n  render(props) {\n    let telList = this.props.phNo.map((p) => {\n      return (\n        <p key={p}>\n          <a href={\"tel:\" + p}>{p}</a>\n        </p>\n      );\n    });\n\n    console.log(this.props.last_verified);\n    return (\n      <Jumbotron>\n        <h3>{this.props.name}</h3>\n        <h5>Contact No: {telList}</h5>\n        <Container>\n          <Row>\n            <Col>\n              <p>\n                Locality: <strong>{this.props.locality}</strong>\n              </p>\n            </Col>\n\n            <Col>\n              <p>\n                {\" \"}\n                City: <strong>{this.props.city}</strong>\n              </p>\n            </Col>\n            <Col>\n              <p>\n                Pincode: <strong>{this.props.pin}</strong>\n              </p>\n            </Col>\n          </Row>\n        </Container>\n\n        <p>\n          Last verified{\" \"}\n          <strong>\n            {Math.ceil(\n              (this.state.timenow -\n                new Date(this.state.last_verified).getTime()) /\n                (1000 * 60)\n            )}{\" \"}\n            mins ago\n          </strong>\n        </p>\n\n        {this.state.verified ? (\n          <p>\n            You and <strong>{this.props.verified_by}</strong> other user(s) have\n            verified. <br />\n            Thank you for helping us!\n          </p>\n        ) : (\n          <p>\n            Verified by <strong>{this.props.verified_by}</strong> user(s)\n          </p>\n        )}\n\n        <Container>\n          <Row>\n            <Col>\n              <Button\n                variant=\"success\"\n                onClick={(e) => this.verifyLead(e)}\n                disabled={this.state.verified}\n              >\n                Verify\n              </Button>\n            </Col>\n            <Col>\n              {\" \"}\n              <Button variant=\"danger\" style={{ float: \"right\" }}>\n                Report\n              </Button>\n            </Col>\n          </Row>\n        </Container>\n      </Jumbotron>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport OxygenLead from \"./OxygenLead\";\nimport { Collapse } from \"react-bootstrap\";\n\nexport default class OxygenList extends Component {\n  state = { oxygenLeads: [], searchResults: [], open: false };\n  getOxygenLeads = () => {\n    axios\n      .get(\"/oxygen\")\n      .then((data) => {\n        this.setState({ oxygenLeads: [...data.data] });\n        this.setState({ searchResults: [...data.data] });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n\n      setTimeout(()=>this.setState({open: true}),3000)\n  };\n\n  componentDidMount() {\n    this.getOxygenLeads();\n    console.log(\"mounted\");\n    \n  }\n\n  verifiedByUser = (id) => {\n    let leads = [...this.state.oxygenLeads];\n    let index = 0;\n    leads.forEach((v, i) => {\n      if (v.id === id) index = i;\n    });\n    let lead = { ...leads[index] };\n    lead.last_verified = new Date();\n    lead.verified_by = lead.verified_by + 1;\n    leads[index] = lead;\n    this.setState({ oxygenLeads: [...leads] });\n    // lead.verified_by=lead.verified_by+1\n    // console.log(lead);\n  };\n\n  componentDidUpdate(prevProps) {\n    console.log(prevProps, this.props);\n    if (\n      prevProps.search.searchBy !== this.props.search.searchBy ||\n      prevProps.search.searchParam !== this.props.search.searchParam\n    ) {\n      let searchBy = this.props.search.searchBy;\n      let searchParam = this.props.search.searchParam;\n      console.log(\"componentDidUpdate\", searchBy, searchParam);\n\n      let a4 = this.state.oxygenLeads.filter((l) => l[searchBy] === searchParam);\n\n      this.setState({ searchResults: a4 });\n      console.log(a4);\n    }\n  }\n\n  render(props) {\n    let array_of_o2 = this.state.searchResults.map((l) => {\n      return (\n        <div>\n          <OxygenLead\n            name={l.name}\n            phNo={l.phone_number}\n            locality={l.locality}\n            city={l.city}\n            pin={l.pincode}\n            last_verified={l.last_verified}\n            verified_by={l.verified_by}\n            added_by={l.added_by}\n            reports={l.reports}\n            key={l.id}\n            id={l.id}\n            verify={this.verifiedByUser}\n          ></OxygenLead>\n        </div>\n      );\n    });\n\n    return <Collapse in={this.state.open}><div style={{ marginTop: \"5rem\" }}>{array_of_o2}</div></Collapse>;\n  }\n}\n","import React, { useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport NavBar from \"./Components/NavBar\";\nimport OxygenList from \"./Components/OxygenList\";\n\n\n\nfunction App() {\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [searchBy, setSearchBy] = useState(\"\")\n\n  const getSearchParam = (param,by)=>{\n    setSearchParam(param)\n    setSearchBy(by)\n  }\n  return (\n    <div>\n      <NavBar search={getSearchParam}></NavBar>\n      <Container>\n\n          <OxygenList search={{searchBy, searchParam}}></OxygenList>\n\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}